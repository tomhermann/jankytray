apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'application'

repositories {
	maven { url 'http://iheartsoftware.com/nexus/content/groups/public'}
	maven { url 'http://maven.eclipse.org/nexus/content/repositories/testing/'}
}

configurations {
	all*.exclude group: "commons-logging", module: "commons-logging"
}

mainClassName = "com.zombietank.jankytray.Boot"
sourceCompatibility = 1.6
targetCompatibility = sourceCompatibility

dependencies {
	compile (
		'javax.inject:javax.inject:1',
		'cglib:cglib:2.2.2',
		"org.springframework:spring-context:${springVersion}",
		"org.springframework:spring-beans:${springVersion}",
		"org.slf4j:slf4j-api:${slf4jVersion}",
		"org.slf4j:jcl-over-slf4j:${slf4jVersion}",
		"org.slf4j:slf4j-log4j12:${slf4jVersion}",
		'com.google.guava:guava:11.0.2',
		'args4j:args4j:2.0.12',
		'org.simpleframework:simple-xml:2.6.1',
		'org.apache.httpcomponents:httpclient:4.1.3',
		"org.eclipse.swt:org.eclipse.swt:${swtVersion}",
		"org.eclipse.jface:org.eclipse.jface:${swtVersion}"
	)
	runtime (
		'log4j:log4j:1.2.16'
	)

	testCompile (
		'junit:junit:4.10',
		'org.hamcrest:hamcrest-all:1.1',
		'org.mockito:mockito-all:1.9.0'
	)
}

if(isLinux()) {
	dependencies {
		runtime (
			"org.eclipse.swt:org.eclipse.swt.gtk.linux.x86_64:${swtVersion}"
		)
	}
}

if(isWindows()) {
	dependencies {
		runtime (
			"org.eclipse.swt:org.eclipse.swt.win32.win32.x86:${swtVersion}"
		)
	}
}


def isLinux() {
	System.getProperty('os.name').toLowerCase().contains('nux') || System.getProperty('os.name').toLowerCase().contains('nix') 
}

def isWindows() {
	System.getProperty('os.name').toLowerCase().contains('windows')
}