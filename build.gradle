apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'

repositories {
	maven { url 'http://iheartsoftware.com/nexus/content/groups/public'}
	maven { url 'http://maven.eclipse.org/nexus/content/repositories/testing/'}
}

configurations {
	all*.exclude group: "commons-logging", module: "commons-logging"
}

sourceCompatibility = 1.6
targetCompatibility = sourceCompatibility

dependencies {
	compile (
		'javax.inject:javax.inject:1',
		'cglib:cglib:2.2.2',
		"org.springframework:spring-context:${springVersion}",
		"org.springframework:spring-beans:${springVersion}",
		"org.slf4j:slf4j-api:${slf4jVersion}",
		"org.slf4j:jcl-over-slf4j:${slf4jVersion}",
		"org.slf4j:slf4j-log4j12:${slf4jVersion}",
		'com.google.guava:guava:11.0.2',
		'org.simpleframework:simple-xml:2.6.1',
		'org.apache.httpcomponents:httpclient:4.1.3',
		"org.eclipse.swt:org.eclipse.swt:${swtVersion}",
		"org.eclipse.jface:org.eclipse.jface:${swtVersion}",
		"org.eclipse.swt:org.eclipse.swt.${swtPlatform}:${swtVersion}"
		
	)
	runtime (
		'log4j:log4j:1.2.16'
	)

	testCompile (
		'junit:junit:4.10',
		'org.hamcrest:hamcrest-all:1.1',
		'org.mockito:mockito-all:1.9.0'
	)
}


task createJar(dependsOn: jar) << {
	copy {
		from configurations.runtime
		into "$buildDir/output/lib"
	}
	copy {
		from jar.archivePath
		into "$buildDir/output"
	}
		
}

jar {
	manifest {
		def manifestCp = '. ' + configurations.runtime.files.collect  {
			File file = it
			"lib/${file.name}"
		}.join(' ')
		
		attributes(
			'Class-Path': manifestCp,
			'Main-Class': 'com.zombietank.jankytray.Boot',
			'Implementation-Title': 'JankyTray', 
			'Implementation-Version': version
		)
	}
}



